/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package in.neebal.avro.weatherdata;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MaxTempYear extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MaxTempYear\",\"namespace\":\"in.neebal.avro.weatherdata\",\"fields\":[{\"name\":\"year\",\"type\":\"int\",\"default\":0},{\"name\":\"maxTemperature\",\"type\":\"int\",\"default\":-1},{\"name\":\"hours\",\"type\":\"int\",\"default\":-1}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int year;
  @Deprecated public int maxTemperature;
  @Deprecated public int hours;

  /**
   * Default constructor.
   */
  public MaxTempYear() {}

  /**
   * All-args constructor.
   */
  public MaxTempYear(java.lang.Integer year, java.lang.Integer maxTemperature, java.lang.Integer hours) {
    this.year = year;
    this.maxTemperature = maxTemperature;
    this.hours = hours;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return year;
    case 1: return maxTemperature;
    case 2: return hours;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: year = (java.lang.Integer)value$; break;
    case 1: maxTemperature = (java.lang.Integer)value$; break;
    case 2: hours = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'year' field.
   */
  public java.lang.Integer getYear() {
    return year;
  }

  /**
   * Sets the value of the 'year' field.
   * @param value the value to set.
   */
  public void setYear(java.lang.Integer value) {
    this.year = value;
  }

  /**
   * Gets the value of the 'maxTemperature' field.
   */
  public java.lang.Integer getMaxTemperature() {
    return maxTemperature;
  }

  /**
   * Sets the value of the 'maxTemperature' field.
   * @param value the value to set.
   */
  public void setMaxTemperature(java.lang.Integer value) {
    this.maxTemperature = value;
  }

  /**
   * Gets the value of the 'hours' field.
   */
  public java.lang.Integer getHours() {
    return hours;
  }

  /**
   * Sets the value of the 'hours' field.
   * @param value the value to set.
   */
  public void setHours(java.lang.Integer value) {
    this.hours = value;
  }

  /** Creates a new MaxTempYear RecordBuilder */
  public static in.neebal.avro.weatherdata.MaxTempYear.Builder newBuilder() {
    return new in.neebal.avro.weatherdata.MaxTempYear.Builder();
  }
  
  /** Creates a new MaxTempYear RecordBuilder by copying an existing Builder */
  public static in.neebal.avro.weatherdata.MaxTempYear.Builder newBuilder(in.neebal.avro.weatherdata.MaxTempYear.Builder other) {
    return new in.neebal.avro.weatherdata.MaxTempYear.Builder(other);
  }
  
  /** Creates a new MaxTempYear RecordBuilder by copying an existing MaxTempYear instance */
  public static in.neebal.avro.weatherdata.MaxTempYear.Builder newBuilder(in.neebal.avro.weatherdata.MaxTempYear other) {
    return new in.neebal.avro.weatherdata.MaxTempYear.Builder(other);
  }
  
  /**
   * RecordBuilder for MaxTempYear instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MaxTempYear>
    implements org.apache.avro.data.RecordBuilder<MaxTempYear> {

    private int year;
    private int maxTemperature;
    private int hours;

    /** Creates a new Builder */
    private Builder() {
      super(in.neebal.avro.weatherdata.MaxTempYear.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(in.neebal.avro.weatherdata.MaxTempYear.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing MaxTempYear instance */
    private Builder(in.neebal.avro.weatherdata.MaxTempYear other) {
            super(in.neebal.avro.weatherdata.MaxTempYear.SCHEMA$);
      if (isValidValue(fields()[0], other.year)) {
        this.year = data().deepCopy(fields()[0].schema(), other.year);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.maxTemperature)) {
        this.maxTemperature = data().deepCopy(fields()[1].schema(), other.maxTemperature);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hours)) {
        this.hours = data().deepCopy(fields()[2].schema(), other.hours);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'year' field */
    public java.lang.Integer getYear() {
      return year;
    }
    
    /** Sets the value of the 'year' field */
    public in.neebal.avro.weatherdata.MaxTempYear.Builder setYear(int value) {
      validate(fields()[0], value);
      this.year = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'year' field has been set */
    public boolean hasYear() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'year' field */
    public in.neebal.avro.weatherdata.MaxTempYear.Builder clearYear() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'maxTemperature' field */
    public java.lang.Integer getMaxTemperature() {
      return maxTemperature;
    }
    
    /** Sets the value of the 'maxTemperature' field */
    public in.neebal.avro.weatherdata.MaxTempYear.Builder setMaxTemperature(int value) {
      validate(fields()[1], value);
      this.maxTemperature = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'maxTemperature' field has been set */
    public boolean hasMaxTemperature() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'maxTemperature' field */
    public in.neebal.avro.weatherdata.MaxTempYear.Builder clearMaxTemperature() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'hours' field */
    public java.lang.Integer getHours() {
      return hours;
    }
    
    /** Sets the value of the 'hours' field */
    public in.neebal.avro.weatherdata.MaxTempYear.Builder setHours(int value) {
      validate(fields()[2], value);
      this.hours = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'hours' field has been set */
    public boolean hasHours() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'hours' field */
    public in.neebal.avro.weatherdata.MaxTempYear.Builder clearHours() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public MaxTempYear build() {
      try {
        MaxTempYear record = new MaxTempYear();
        record.year = fieldSetFlags()[0] ? this.year : (java.lang.Integer) defaultValue(fields()[0]);
        record.maxTemperature = fieldSetFlags()[1] ? this.maxTemperature : (java.lang.Integer) defaultValue(fields()[1]);
        record.hours = fieldSetFlags()[2] ? this.hours : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
